<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
        <title>2021年度春のパネル展示会</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel='stylesheet' href='/stylesheets/style.css' />
        <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="/stylesheets/swiper-bundle.min.css">
        <script src="/javascripts/jquery-3.5.1.min.js"></script>
    </head>
    <body class="container">
        <div class="account-container">
            <div class="menu-contents">
                <div class="items-container">
                    <div class="new-account-form">
                        <h3>作品情報変更</h3>
                        <label for="">イラスト</label>
                        <img src="" >
                        <font color = "red" >※イラストを変更したい場合は削除し、新規作成を行ってください。</font>
                        <label for="grade-select">回生</label>
                        <p class="err-msg" id="grade-err"></p>
                        <!-- //gradeは '1':'1回生', '2':'2回生', '3':'3回生', '4':'4回生', '5':'その他', '6':'合作'。 -->
                        <select name="grade" id="grade-select">
                            <option value="">選択してください</option>
                            <option value="1">１回生</option>
                            <option value="2">２回生</option>
                            <option value="3">３回生</option>
                            <option value="4">４回生</option>
                            <option value="5">その他</option>
                            <option value="6">合作</option>
                        </select>
                        <!-- //sizeは '1':'B4', '2':'B5', '3':'その他'。 -->
                        <label for="size-select">サイズ</label>
                        <p class="err-msg" id="size-err"></p>
                        <select name="size" id="size-select">
                            <option value="">選択してください</option>
                            <option value="1">B4</option>
                            <option value="2">B5</option>
                            <option value="3">その他</option>
                        </select>
                        <label for="title">作品名</label>
                        <p class="err-msg" id="title-err"></p>
                        <input class="text-input" type="text" name="title" id="title">
                        <label for="penname">ペンネーム</label>
                        <p class="err-msg" id="penname-err"></p>
                        <input class="text-input" type="text" name="penname" id="penname">
                        <label for="caption">説明文(150字以内)</label>
                        <p class="err-msg" id="caption-err"></p>
                        <textarea id="caption" type="text" maxlength="150" name="caption"></textarea>
                        <button id="submit-btn" class="btn">変更内容を更新して公開する</button>
                        <button class="btn delete-btn" id="delete">削除</button>
                        <button class="btn return-btn" id="return">戻る</button>
                    </form>
                </div>
            </div>
        </div>
        <!-- The core Firebase JS SDK is always required and must be listed first -->
        <script src="https://www.gstatic.com/firebasejs/8.4.3/firebase-app.js"></script>
        <script src="https://www.gstatic.com/firebasejs/8.4.3/firebase-storage.js"></script>
        <script src="https://www.gstatic.com/firebasejs/8.3.2/firebase-firestore.js"></script>
        <script src="https://www.gstatic.com/firebasejs/8.3.2/firebase-auth.js"></script>
        <script src="/javascripts/firebase_config.js"></script>
        <script>
//共通して必要な変数や値を設定。
var uid;
var imgUid;
var value;
const FIREBASE_DATA ={
    COLLECTION:{
        CRIENTS:'crients',
        IMGS:'imgs',
        USERS:'users',
    }
}

const VALIDATION = {
    GRADE:"回生を選択してください。",
    SIZE:"サイズを選択してください。",
    PENNAME:"ペンネームを入力してください。",
    TITLE:"タイトルを入力してください。",
    CAPTION:"説明文を入力してください。",
}
        </script>
        <script>

var queryValue;

firebase.auth().onAuthStateChanged(function(user) {
    if (user) {
        console.log("There's a user");
        const queryObject = getQueryObject();
        if(queryObject.value){
            uid = firebase.auth().currentUser.uid;
            imgUid = `${uid}-${queryObject.value}`;
            value = queryObject.value;
            readInfo(imgUid);
        }else{
            console.log("No value");
            location.href='/login/account';
        }
    } else {
        console.log("No user");
        location.href='/login';
    }
});

const submitButton = document.getElementById('submit-btn');
const deleteButton = document.getElementById('delete');

const gradeErrMsg = document.querySelector('#grade-err');
const sizeErrMsg = document.querySelector('#size-err');
const pennameErrMsg = document.querySelector('#penname-err');
const titleErrMsg = document.querySelector('#title-err');
const captionErrMsg = document.querySelector('#caption-err');

submitButton.addEventListener("click",()=>{
    console.log("click fileButton");
    gradeErrMsg.innerText = "";
    sizeErrMsg.innerText = "";
    pennameErrMsg.innerText = "";
    titleErrMsg.innerText = "";
    captionErrMsg.innerText = "";
    const gradeValue = document.getElementById('grade-select').value;
    const sizeValue = document.getElementById('size-select').value;
    const pennameValue = document.getElementById('penname').value;
    const titleValue = document.getElementById('title').value;
    const captionValue = document.getElementById('caption').value;
    validation(gradeValue, sizeValue, pennameValue, titleValue, captionValue);
    const imgObject = {
            grade: gradeValue,
            size: sizeValue,
            penname: pennameValue,
            title: titleValue,
            caption: captionValue,
    };
    console.log("imgObject",imgObject);
    dataUpdate(imgObject,FIREBASE_DATA.COLLECTION.IMGS,imgUid);
});

deleteButton.addEventListener("click",()=>{
    deleteFunc(value,uid);
});

function readInfo(imgUid){
    var imgData;
    const db = firebase.firestore();
    const userRef = db.collection('imgs').doc(imgUid);
    userRef.get().then((doc)=>{
        if (doc.exists) {
            imgData = doc.data();
            console.log("imgData:", imgData);
            writeInfo(imgData);
        } else {
            // doc.data() will be undefined in this case
            console.log("No such document!");
            location.href='/login/account';
        }
    }).catch((err)=>{
        console.log("Error getting Imgs Data:", err)
    })
}

function writeInfo(imgData){
    const gradeElement = document.getElementById('grade-select');
    const sizeElement = document.getElementById('size-select');
    const pennameElement = document.getElementById('penname');
    const titleElement = document.getElementById('title');
    const captionElement = document.getElementById('caption');
    const imageElement = document.querySelector('img');

    gradeElement.value = imgData.grade;
    sizeElement.value = imgData.size;
    pennameElement.value = imgData.penname;
    titleElement.value = imgData.title;
    captionElement.value = imgData.caption;

    //getUserImg(imgData.id,imageElement);
}

//firebaseのデータを書き換える際に使用する関数
function dataUpdate(object,collection,document){
    const db = firebase.firestore();
    const imgsRef = db.collection(collection).doc(document);
    imgsRef.update(object)
        .then(() => {
            console.log("Imgs Data successfully changed!");
            location.href='/login/account';
        })
        .catch((error) => {
            console.error("Error changing Imgs Data: ", error);
    });
}
        </script>


        <script>
//クエリパラメータを取得、オブジェクトとして返す。
function getQueryObject(){
    var queryString = window.location.search;
    var queryObject = new Object();
    if(queryString){
        queryString = queryString.substring(1);
        var parameters = queryString.split('&');

        for (var i = 0; i < parameters.length; i++) {
            var element = parameters[i].split('=');
            var paramName = decodeURIComponent(element[0]);
            var paramValue = decodeURIComponent(element[1]);
            queryObject[paramName] = paramValue;
        }
    }
    return queryObject;
}

//画像の取得から反映まで行います。
function getUserImg(imgUid,element){
    const storage = firebase.storage();
    var storageRef = storage.ref();
    console.log('imgUid',imgUid);
    storageRef.child('imgs/'+imgUid+".jpg").getDownloadURL().then(function(url) {
        //エレメントに画像を反映
        element.src = url;
    }).catch((error) => {
        // Handle any errors
        console.log("err >>>",error);
    });
}

function deleteFunc(value,uid){
        if(window.confirm('一度削除したイラスト情報は元に戻りません。削除してもよろしいでしょうか？')){
            const db = firebase.firestore();
            db.collection("imgs").doc(`${uid}-${value}`).delete().then(() => {
                console.log("imgs Document successfully deleted!");
                deleteUsersFunc(value,uid);
            }).catch((error) => {
                console.error("Error removing document: ", error);
            });
        }
    }

    function deleteUsersFunc(value,uid){
        const db = firebase.firestore();
        var usersRef = db.collection('users').doc(uid);
        // Remove the 'capital' field from the document
        var removeImg = usersRef.update({
            [`img${value}`]: firebase.firestore.FieldValue.delete()
        });
        deleteCrient(value,uid)
    }
    function deleteCrient(value,uid){
        const db = firebase.firestore();
        db.collection("crients").doc(`${uid}-${value}`).delete().then(() => {
            console.log("crient Document successfully deleted!");
            deleteImgFunc(value,uid);
        }).catch((error) => {
            console.error("Error removing crient document: ", error);
        });
    }

    function deleteImgFunc(value,uid){
        const storage = firebase.storage();
        var storageRef = storage.ref();
        storageRef.child('imgs/'+uid+"-"+value+".jpg").delete().then(function() {
            // File deleted successfully
            console.log("delete success!!");
            location.href="/login/account/";
            }).catch(function(error) {
            // Uh-oh, an error occurred!
        });
    }

    function validation(gradeValue, sizeValue, pennameValue, titleValue, captionValue){
        var judge = 0;
        if(gradeValue==""){
            gradeErrMsg.innerText = VALIDATION.GRADE;
            judge++;
        }
        if(sizeValue==""){
            sizeErrMsg.innerText = VALIDATION.SIZE;
            judge++;
        }
        if(pennameValue==""){
            pennameErrMsg.innerText = VALIDATION.PENNAME;
            judge++;
        }
        if(titleValue==""){
            titleErrMsg.innerText = VALIDATION.TITLE;
            judge++;
        }
        if(captionValue==""){
            captionErrMsg.innerText = VALIDATION.CAPTION;
            judge++;
        }
        if(judge!=0)throw Error("Validation!!");
    }
        </script>
    </body>
</html>