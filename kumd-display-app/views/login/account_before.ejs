<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
        <title>2021年度春のパネル展示会</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <script src="/javascripts/jquery-3.5.1.min.js"></script>
    </head>
    <body class="container" id="container">
        <div id="account-container"></div>
        <!-- The core Firebase JS SDK is always required and must be listed first -->
        <script src="https://www.gstatic.com/firebasejs/8.4.3/firebase-app.js"></script>
        <script src="https://www.gstatic.com/firebasejs/8.4.3/firebase-storage.js"></script>
        <script src="https://www.gstatic.com/firebasejs/8.3.2/firebase-firestore.js"></script>
        <script src="https://www.gstatic.com/firebasejs/8.3.2/firebase-auth.js"></script>
        <script>
            var firebaseConfig = {
    apiKey: "AIzaSyA4chVLLT13u2-zlfDlt7p5GXD_98DgY2Q",
    authDomain: "kumd-app.firebaseapp.com",
    databaseURL: "https://kumd-app-default-rtdb.firebaseio.com",
    projectId: "kumd-app",
    storageBucket: "kumd-app.appspot.com",
    messagingSenderId: "28972770999",
    appId: "1:28972770999:web:59ad63f788f272e4868f32",
    measurementId: "G-YPKJW425F5"
};
  // Initialize Firebase
firebase.initializeApp(firebaseConfig);

firebase.auth().onAuthStateChanged(function(user) {
    if (user) {
        console.log("There's a user");
        start();
    } else {
        console.log("No user");
        location.href='/login';
    }
});

function start(){
    var i=0;
    const uid = firebase.auth().currentUser.uid;
    const url = "/login/account/paint/";
    var data={};
    var usersData;
    console.log("click registerButton");
    const db = firebase.firestore();
    const userRef = db.collection('users').doc(uid);
    userRef.get().then((doc)=>{
        if (doc.exists) {
            console.log("Document data:", doc.data());
            usersData = doc.data();
            delete usersData.imgNum;
            console.log("usersData:", usersData);
        } else {
            // doc.data() will be undefined in this case
            console.log("No such document!");
        }
        //イラストの情報の取得
        Object.keys(usersData).forEach((uidImgNum) =>{
            console.log("uidImgNum:", usersData[uidImgNum]);
            const imgsRef = db.collection("imgs").doc(usersData[uidImgNum]);
            imgsRef.get().then((doc2)=>{
                if(doc2.data()!=null){
                    i++;
                    console.log("img"+i);
                    console.log(doc2.data());
                    data["img"+i] = doc2.data();
                }else{
                    // doc.data() will be undefined in this case
                    console.log("No such document!");
                }
                if(Object.keys(data).length==Object.keys(usersData).length){
                    console.log(data);
                    doPost(url,data);
                }
            })
            .catch((error) => {
                console.error("Error writing Imgs Data: ", error);
            });
        });
    })
    .catch((err)=>{
        console.log("Error getting Users Data:", err)
    })
}
function doPost(url, data) {
   console.log(url);
   var xhr = new XMLHttpRequest();

   xhr.open("POST", url,true);
// xhr.setRequestHeader("Content-Type", "application/json");
xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
xhr.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/");
// Sec-Fetch-Dest: document
// Sec-Fetch-Mode: navigate
// Sec-Fetch-Site: none
//Cache-Control: max-age=0
xhr.setRequestHeader("Cache-Control", "max-age=0");
//xhr.setRequestHeader("Sec-Fetch-Mode", "navigate");
//xhr.setRequestHeader("Sec-Fetch-Site", "none");
// xhr.setRequestHeader("Connection", "Close");
// xhr.setRequestHeader("Connection", "Close");
// xhr.setRequestHeader("Connection", "Close");
//xhr.responseType = "document";
xhr.onreadystatechange = function() { // 状態が変化すると関数が呼び出されます。
    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
        // リクエストの終了。ここの処理を実行します。
        //const result = escapeRegExp(xhr.response).match(/class="container">(.*)/);
        //const result = xhr.response.match(/<div class="(.*)"/);
        console.log(xhr.response);
        //console.log(escapeRegExp(xhr.response));
        // console.log(result);
        console.log("account_before");
        // const greet = document.getElementById('container');
        // greet.innerHTML = xhr.response;
        document.body.innerHTML=xhr.response;
    }
}
xhr.send(JSON.stringify(data));
}
function escapeRegExp(string) {
  return string.replace(/[.*+?^=!:${}()|[\]\/\\]/g, '\\$&'); // $&はマッチした部分文字列全体を意味します
}
        </script>
    </body>
</html>